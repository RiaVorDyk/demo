ALTER TABLE имя_таблицы
ADD CONSTRAINT имя_ограничения PRIMARY KEY (имя_поля);
ALTER TABLE имя_таблицы
ADD CONSTRAINT имя_ограничения FOREIGN KEY (имя_поля)
REFERENCES другая_таблица (первичный_ключ_другой_таблицы);
using Microsoft.Data.SqlClient;
using System.Windows;
<Grid>
	<TextBlock Text="Логин:" Margin="10,10,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
	<TextBox x:Name="UsernameTextBox" Margin="70,10,10,0" HorizontalAlignment="Stretch" VerticalAlignment="Top"/>
	<TextBlock Text="Пароль:" Margin="10,50,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
	<PasswordBox x:Name="PasswordBox" Margin="70,50,10,0" HorizontalAlignment="Stretch" VerticalAlignment="Top"/>
	<Button Content="Войти" Margin="10,100,10,0" Height="30" HorizontalAlignment="Stretch" VerticalAlignment="Top"
            Click="LoginButton_Click"/>
</Grid>
namespace WpfApp1
{
	public partial class MainWindow : Window
	{
    	public MainWindow()
    	{
        	InitializeComponent();
    	}
    	private string GetConnectionString()
    	{
        	return @"Server=localhost\MSSQLSERVER01;Database=bd;Trusted_Connection=True;TrustServerCertificate=True;";
    	}
    	private T ExecuteScalar<T>(string query, params SqlParameter[] parameters)
    	{
        	try
        	{
            	using (SqlConnection connection = new SqlConnection(GetConnectionString()))
            	{
                    connection.Open();
                	using (SqlCommand command = new SqlCommand(query, connection))
                	{
                    	if (parameters != null)
  	                      command.Parameters.AddRange(parameters);
                    	return (T)command.ExecuteScalar();
                	}
            	}
        	}
        	catch (Exception ex)
        	{
            	MessageBox.Show($"Ошибка выполнения запроса: {ex.Message}", "Ошибка", MessageBoxButton.OK, MessageBoxImage.Error);
            	return default;
        	}
    	}
    	private bool ValidateUser(string username, string password)
    	{
        	string query = @"
            	SELECT COUNT(1)
            	FROM Users
            	WHERE LOWER(Username) = LOWER(@Username) AND Password = @Password";
        	var parameters = new[]
        	{
            	new SqlParameter("@Username", username),
            	new SqlParameter("@Password", password)
        	};
        	return ExecuteScalar<int>(query, parameters) == 1;
    	}
    	private void LoginButton_Click(object sender, RoutedEventArgs e)
    	{
 	       if (ValidateUser(UsernameTextBox.Text, PasswordBox.Password))
            	MessageBox.Show("Успешный вход!", "Успех", MessageBoxButton.OK, MessageBoxImage.Information);
        	else
            	MessageBox.Show("Неверный логин или пароль.", "Ошибка", MessageBoxButton.OK, MessageBoxImage.Error);
    	}
	}
}
